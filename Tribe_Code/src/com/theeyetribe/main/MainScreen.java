/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.theeyetribe.main;

import com.theeyetribe.clientsdk.GazeManager;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Anderson Soares
 */
public class MainScreen extends javax.swing.JFrame {
    
    static String outdir = "C:\\TestesEyeTracking";

    static File arq = new File(outdir+"\\teste.txt");
    
    static FileReader fr;

    static PrintWriter resultado;

    StringBuffer pt = new StringBuffer();

    FileWriter fw;

    BufferedWriter escrever;

    BufferedReader abrirArq;
    
    OutputStream out1 = null, out2 = null;
    
    boolean storeEyetracker = true;
    
    GazeManager gm = null;

    /**
     * Creates new form MainScreen
     */
    public MainScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        startButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        stopButton.setText("Stop");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addComponent(startButton)
                .addGap(18, 18, 18)
                .addComponent(stopButton)
                .addContainerGap(507, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startButton)
                    .addComponent(stopButton))
                .addContainerGap(249, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        String header = "X\tY\tFixo\tTimestamp";
        String webcamname = "HD Pro Webcam C920";
        String screenname = "screen-capture-recorder";
        String framerate = "10";
        
        String outname = "teste";
        String microphonename = "Microfone (Realtek Audio)";

        boolean hasheader = true;
        boolean storeWebcam = true;
        boolean storeScreen = true;
        
//        boolean appendMode = false;

        try {
            fw = new FileWriter(arq.getAbsolutePath());

            escrever = new BufferedWriter(fw);

            resultado = new PrintWriter(escrever);

            if (hasheader) {
                resultado.println(header);
            }
        } catch (IOException ex) {
            Logger.getLogger(Main_copia.class.getName()).log(Level.SEVERE, null, ex);
        }

        
        if (storeWebcam) {
            Process p1;
            try {
                String exec = "ffmpeg -framerate " + framerate
                        + " -f dshow -i video=\"" + webcamname
                        + "\":audio=\"" + microphonename + "\" " + outdir
                        + File.separator + outname + "_webcam.mp4";
                System.out.println(exec);
                p1 = Runtime.getRuntime().exec(exec);
                out1 = p1.getOutputStream();
            } catch (IOException ex) {
                Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if (storeScreen) {
            Process p2;
            try {
                String exec = "ffmpeg -framerate " + framerate + " -f dshow -i video=\"" + screenname + "\" " + outdir + File.separator + outname + "_screen.mp4";
                System.out.println(exec);
                p2 = Runtime.getRuntime().exec(exec);
                out2 = p2.getOutputStream();
            } catch (IOException ex) {
                Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        
        if (storeEyetracker) {
            gm = GazeManager.getInstance(); // Instancia Servidor

            System.out.println("Servidor Ativou? "+gm.activate()); //Servidor Ativo?

            System.out.println("vrsão da API: "+gm.getVersion()); // vrsão da API

            Main_copia.mostrarPosicaoOlhos gz = new Main_copia.mostrarPosicaoOlhos();
            gm.addGazeListener(gz);
        }

//        Scanner s = new Scanner(System.in);
//        String str = s.next();

    }//GEN-LAST:event_startButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        if (out1 != null) {
            try {
                System.out.println("Finalizando OUT1");
                out1.write("q\r\n\n\r".getBytes());
                out1.flush();
            } catch (IOException ex) {
                Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (out2 != null) {
            try {
                System.out.println("Finalizando OUT2");
                out2.write("q\r\n\n\r".getBytes());
                out2.flush();
            } catch (IOException ex) {
                Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        resultado.close();
        if (storeEyetracker && gm != null && gm.isActivated()) {
            gm.deactivate();
        }

        System.out.println("exited");
//        System.exit(0);
    }//GEN-LAST:event_stopButtonActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton startButton;
    private javax.swing.JButton stopButton;
    // End of variables declaration//GEN-END:variables
}
